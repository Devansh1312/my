"""
Django settings for FutureStar project.

Generated by 'django-admin startproject' using Django 5.0.
For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-x7$wh)3+(3$)13tn$!pa=x#@1%l*qdmwk%zv!x(vlvsxkwey9-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['futurestar.redspark.redspark.a2hosted.com', 'localhost', '127.0.0.1','75.101.179.30','redsparkinfo.in']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'FutureStar_App',
    'FutureStarFrontend',
    'rest_framework',
    'rest_framework_simplejwt',
    'FutureStarAPI',
    'FutureStarTeamApp',
    'FutureStarTournamentApp',
    'FutureStarTrainingGroupApp',
    'FutureStarTrainingApp',
    'FutureStarGameSystem',
    'FutureStarFriendlyGame',
    'sass_processor',
    'widget_tweaks',
    'corsheaders',
    'whitenoise' ,
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'FutureStarAPI.middleware.MiddlewareToken',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', 
]

CORS_ALLOW_ALL_ORIGINS = True 

CORS_ALLOWED_ORIGINS = [
    "https://futurestar.redspark.redspark.a2hosted.com",
    "https://redsparkinfo.in",
    "https://goalactico.com",
    "https://www.goalactico.com",
    "http://goalactico.com",
    "http://www.goalactico.com",
    "http://127.0.0.1:8000",
    "http://127.0.0.1",
    "https://127.0.0.1:8000",
    "https://127.0.0.1",
]

ROOT_URLCONF = 'FutureStar.urls'

LOGIN_URL = '/login/' 

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.i18n',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'FutureStar_App.context_processor.system_settings',
                'FutureStarFrontend.context_processor.user_is_team_founder'
            ],
        },
    },
]

WSGI_APPLICATION = 'FutureStar.wsgi.application'

### Local ####
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'futurestar',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': 'localhost',
        'PORT': '3306',
         'OPTIONS': {
            'charset': 'utf8mb4',  # Set charset to utf8mb4 to support emojis
        }
    }
}


# ### A2Hosting ####
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'redspar2_futurestardata2',
#         'USER': 'redspar2_futurestar',
#         'PASSWORD': 'redspark@1',
#         'HOST': 'localhost',
#         'PORT': '3306',
#         'OPTIONS': {
#             'charset': 'utf8mb4',  # Set charset to utf8mb4 to support emojis
#         },
#     }
# }


## AWS ####
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'futurestar',
#         'USER': 'futurestar',
#         'PASSWORD': '1234',
#         'HOST': 'localhost',
#         'PORT': '3306',
#         'OPTIONS': {
#             'charset': 'utf8mb4',  
#         },
#     }
# }

################### Client Server Main #########################
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'goalactico_goalactico',
#         'USER': 'goalactico_goalactico',
#         'PASSWORD': 'Redspark@2025',
#         'HOST': 'localhost',
#         'PORT': '3306',
#         'OPTIONS': {
#             'charset': 'utf8mb4',  # Set charset to utf8mb4 to support emojis
#         },
#     }
# }

AUTH_USER_MODEL = 'FutureStar_App.User'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


#language Settibgs
LANGUAGE_CODE = 'en'

# Supported languages
LANGUAGES = [
    ('en', 'English'),
    ('ar', 'Arabic'),  # Add more languages as needed
]

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

######### twilio ########
TAQNYAT_API_KEY = '008a71c7ae03153205cf784359e8d0ad'
TAQNYAT_SENDER_NAME = 'Goalactico'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Riyadh'
USE_TZ = True  # Ensure Django uses the specified timezone

USE_I18N = True
USE_L10N = True

STATIC_URL = 'static/'
STATICFILES_DIRS=[
    BASE_DIR /'static',  # static files in the project root
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# REST Framework configuration
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # Use JWT for authentication
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.MultiPartParser',  # Important for file uploads
        'rest_framework.parsers.FormParser',
    )
}
# settings.py
REMEMBER_ME_EXPIRY = 1209600  # 2 weeks in seconds

# JWT Configuration
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=160),  # Token validity period
    'REFRESH_TOKEN_LIFETIME': timedelta(days=365),  # Refresh token validity period
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,     
    'AUTH_HEADER_TYPES': ('Bearer',),  # Use Bearer tokens for authorization
}
APPEND_SLASH=False

############ For Secure Password And Not Visible in Network ################
# SESSION_COOKIE_SECURE = True  # Only send cookies over HTTPS
# SESSION_COOKIE_HTTPONLY = True  # Prevent access to cookies via JavaScript
# SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Store sessions in the database
# CSRF_COOKIE_SECURE = True
# CSRF_COOKIE_HTTPONLY = True


######################## Client Server Main ############################
SESSION_COOKIE_SECURE = False  # Set to True in production (requires HTTPS)
SESSION_COOKIE_HTTPONLY = True  # Prevent access to cookies via JavaScript
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Store sessions in the database

CSRF_COOKIE_SECURE = False  # Set to True in production (requires HTTPS)
CSRF_COOKIE_HTTPONLY = True  # Prevent client-side JavaScript access

CORS_ALLOW_CREDENTIALS = True  # Allow cookies to be sent with cross-origin requests

# Adjust SAMESITE settings for local development
CSRF_COOKIE_SAMESITE = 'Lax'  # 'Lax' allows cookies on same-site navigation
SESSION_COOKIE_SAMESITE = 'Lax'  # Prevents cross-site attacks while allowing normal use

########### Trusted Origins for CSRF ################
CSRF_TRUSTED_ORIGINS = [
    "https://futurestar.redspark.redspark.a2hosted.com",
    "https://redsparkinfo.in",
    "https://goalactico.com",
    "https://www.goalactico.com",
    "http://goalactico.com",
    "http://www.goalactico.com",
    "http://127.0.0.1:8000",
    "http://127.0.0.1",
    "https://127.0.0.1:8000",
    "https://127.0.0.1",
]

import os

# LOG_DIR = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), 'logs')

# if not os.path.exists(LOG_DIR):
#     os.makedirs(LOG_DIR)

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'file': {
#             'level': 'DEBUG',  # Change to INFO or ERROR in production
#             'class': 'logging.FileHandler',
#             'filename': os.path.join(LOG_DIR, 'django_requests.log'),  # Log file
#             'formatter': 'detailed',
#         },
#     },
#     'formatters': {
#         'detailed': {
#             'format': '{levelname} {asctime} {module} {message} {pathname}:{lineno}',
#             'style': '{',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['file'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#         'django.request': {  # Logs every request
#             'handlers': ['file'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#         'django.server': {  # Logs every response
#             'handlers': ['file'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#     },
# }